// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Type {
  buy
  rent
}

enum Property {
  apartment
  house
  condo
  land
}
model User {
  id                    String @id @default(auto()) @map("_id") @db.ObjectId
  username              String @unique
  email                 String @unique
  password              String
  avatar                String?
  createdAt             DateTime @default(now())
  emailToken            String? @unique
  passwordResetToken    String? @unique
  passwordExpiry        DateTime?
  post                  Post[]
  savedPost             SavedPost[]
  chat                  Chat[]
  messages              Messages[]
  
}

model Post {
  id                    String @id @default(auto()) @map("_id") @db.ObjectId
  title                 String
  price                 Int
  images                String[]
  address               String
  city                  String
  bedroom               Int
  bathroom              Int
  logitude              String
  latitude              String
  type                  Type
  property              Property
  createdAt             DateTime @default(now())
  user                  User @relation(fields: [userId], references: [id])
  userId                String @db.ObjectId
  savedPost             SavedPost[]
  postDetails           PostDetails[]
}

model PostDetails {
 id                     String @id @default(auto()) @map("_id") @db.ObjectId
 description            String
 utilities              String
 pets                   String
 income                 String
 size                   String
 school                 String
 bus                    String
 restaurant             String
 post                   Post @relation(fields: [postDetailsId], references: [id])
 postDetailsId          String @db.ObjectId
}

model SavedPost {
  id                    String @id @default(auto()) @map("_id") @db.ObjectId
  user                  User @relation(fields: [userId], references: [id])
  userId                String @db.ObjectId
  post                  Post @relation(fields: [postId], references: [id])
  postId                String @db.ObjectId
  createdAt             DateTime @default(now())
}

model Chat {
  id                    String @id @default(auto()) @map("_id") @db.ObjectId
  user                  User @relation(fields: [chatId], references: [id])
  chatId                String[] @db.ObjectId
  seenBy                String[]
  lastMessage           String[]
  createdAt             DateTime
  messages              Messages[]

}

model Messages {
  id                    String @id @default(auto()) @map("_id") @db.ObjectId
  user                  User @relation(fields: [userId], references: [id])
  userId                String @db.ObjectId
  chat                  Chat @relation(fields: [chatId], references: [id])
  chatId                String @db.ObjectId
  text                  String
  createdAt             DateTime @default(now())
}


